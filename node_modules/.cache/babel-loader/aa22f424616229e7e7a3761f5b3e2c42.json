{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getAuth, updateProfile, signInWithPopup, GoogleAuthProvider, onAuthStateChanged, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport initializeAuthentication from '../Firebase/firebase.init';\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const auth = getAuth();\n  const googleProvider = new GoogleAuthProvider();\n\n  const signInUsingGoogle = () => {\n    return signInWithPopup(auth, googleProvider).then(result => {\n      console.log(result.user);\n      setUser(result.user);\n    }).catch(error => {\n      setError(error.message);\n    });\n  };\n\n  const logout = () => {\n    signOut(auth).then(() => {\n      setUser({});\n    });\n  };\n\n  const processLogin = (email, password) => {\n    signInWithEmailAndPassword(auth, email, password).then(result => {\n      const user = result.user;\n      console.log(user);\n      setError('');\n    }).catch(error => {\n      setError(error.message);\n    });\n  };\n\n  const registerNewUser = (email, password, name) => {\n    createUserWithEmailAndPassword(auth, email, password).then(result => {\n      const user = result.user;\n      console.log(user);\n      setError('');\n      setUserName(name);\n    }).catch(error => {\n      setError(error.message);\n    });\n  };\n\n  const setUserName = name => {\n    updateProfile(auth.currentUser, {\n      displayName: name\n    }).then(result => {});\n  }; // observe whether user auth state changed or not\n\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  return {\n    user,\n    error,\n    signInUsingGoogle,\n    logout,\n    processLogin,\n    registerNewUser\n  };\n};\n\n_s(useFirebase, \"iIn/869R6T2MNTr+7gKkePKLFYg=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["/home/localhost/public_html/Aamern/assignment-11/tourism-or-delivery-website-client-side-Sabbir345/src/hooks/useFirebase.js"],"names":["useState","useEffect","getAuth","updateProfile","signInWithPopup","GoogleAuthProvider","onAuthStateChanged","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","initializeAuthentication","useFirebase","user","setUser","error","setError","auth","googleProvider","signInUsingGoogle","then","result","console","log","catch","message","logout","processLogin","email","password","registerNewUser","name","setUserName","currentUser","displayName","unsubscribe"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getAuth, updateProfile, signInWithPopup, GoogleAuthProvider, onAuthStateChanged, signOut,createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\nimport initializeAuthentication from '../Firebase/firebase.init';\n\ninitializeAuthentication();\n\nconst useFirebase = () => {\n    const [user, setUser] = useState({});\n    const [error, setError] = useState('');\n\n    const auth = getAuth();\n    const googleProvider = new GoogleAuthProvider();\n\n    const signInUsingGoogle = () => {\n        return signInWithPopup(auth, googleProvider)\n                .then(result => {\n                    console.log(result.user);\n                    setUser(result.user);\n                })\n                .catch(error => {\n                    setError(error.message);\n                })\n    }\n\n    const logout = () => {\n        signOut(auth)\n            .then(() => {\n                setUser({})\n            })\n    }\n\n    const processLogin = (email, password) => {\n        signInWithEmailAndPassword(auth, email, password)\n          .then(result => {\n            const user = result.user;\n            console.log(user);\n            setError('');\n          })\n          .catch(error => {\n            setError(error.message);\n          })\n    }\n\n    const registerNewUser = (email, password,name) => {\n        createUserWithEmailAndPassword(auth, email, password)\n          .then(result => {\n            const user = result.user;\n            console.log(user);\n            setError('');\n            setUserName(name);\n          })\n          .catch(error => {\n            setError(error.message);\n          })\n    }\n\n    const setUserName = (name) => {\n        updateProfile(auth.currentUser, { displayName: name })\n          .then(result => { })\n    }\n\n    // observe whether user auth state changed or not\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser(user);\n            }\n        });\n        return unsubscribe;\n    }, [])\n\n    return {\n        user,\n        error,\n        signInUsingGoogle,\n        logout,\n        processLogin,\n        registerNewUser\n    }\n}\n\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}